{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Options.jsx","components/ringtone.mp3","components/Notifications.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","ss","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVdoStatus","setMyVdoStatus","userVdoStatus","setUserVdoStatus","myMicStatus","setMyMicStatus","userMicStatus","setUserMicStatus","myScreen","setMyScreen","chat","setChat","msgRcv","setMsgRcv","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","type","currentMediaStatus","value","msg","sender","setTimeout","Provider","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","myMediaStatus","updateVideo","currentStatus","getVideoTracks","enabled","updateMic","getAudioTracks","shareScreen","getDisplayMedia","cursor","screenStream","replaceTrack","getTracks","onended","sendMsg","timestamp","Date","now","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","margin","spacing","width","breakpoints","down","gridContainer","justifyContent","paper","padding","border","background","color","ButtonGroup","VideoPlayer","useContext","classes","className","Grid","container","Paper","item","xs","md","Typography","variant","gutterBottom","background_color","playsInline","muted","ref","autoPlay","style","opacity","console","log","class","buttons","Button","startIcon","onClick","v","document","getElementById","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","toggleFullScreen","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","Assignment","fontSize","Phone","Notifications","Audio","ringtone","isPlaying","setIsPlaying","play","pause","image","marginLeft","wrapper","App","AppBar","position","appBar","styles","bigheading","align","ReactDOM","render"],"mappings":"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","file":"static/js/main.7b10e301.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\n//const socket = io('http://localhost:5000');\r\nconst socket = io('https://engage-meets.herokuapp.com/');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\r\n    const [stream, setStream] = useState();\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [myVdoStatus, setMyVdoStatus] = useState(true);\r\n    const [userVdoStatus, setUserVdoStatus] = useState();\r\n    const [myMicStatus, setMyMicStatus] = useState(true);\r\n    const [userMicStatus, setUserMicStatus] = useState();\r\n    const [myScreen, setMyScreen] = useState(true);\r\n    const [chat, setChat] = useState([]);\r\n    const [msgRcv, setMsgRcv] = useState(\"\");\r\n    var ss;\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then((currentStream) => {\r\n        setStream(currentStream);\r\n\r\n        myVideo.current.srcObject = currentStream;\r\n      });\r\n\r\n      socket.on('me', (id) => setMe(id));\r\n      socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n          setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n      });\r\n\r\n      socket.on(\"updateUserMedia\", ({ type, currentMediaStatus }) => {\r\n        if (currentMediaStatus !== null || currentMediaStatus !== []) {\r\n          switch (type) {\r\n            case \"video\":\r\n              setUserVdoStatus(currentMediaStatus);\r\n              break;\r\n            case \"mic\":\r\n              setUserMicStatus(currentMediaStatus);\r\n              break;\r\n            default:\r\n              setUserMicStatus(currentMediaStatus[0]);\r\n              setUserVdoStatus(currentMediaStatus[1]);\r\n              break;\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"msgRcv\", ({ name, msg: value, sender }) => {\r\n        setMsgRcv({ value, sender });\r\n        setTimeout(() => {\r\n          setMsgRcv({});\r\n        }, 2000);\r\n      });\r\n\r\n}, []);\r\n\r\n  const answerCall = () => {\r\n          setCallAccepted(true);\r\n          const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n          peer.on('signal', (data) => {\r\n          socket.emit('answerCall', { signal : data, to: call.from , name, type: \"both\", myMediaStatus: [myMicStatus, myVdoStatus]});\r\n        });\r\n\r\n          peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject= currentStream;\r\n          });\r\n\r\n          peer.signal(call.signal);\r\n          connectionRef.current = peer;\r\n\r\n  };\r\n\r\n  const callUser = (id) => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n      peer.on('signal', (data) => {\r\n        socket.emit('callUser', { userToCall: id, signalData : data, from: me, name });\r\n      });\r\n\r\n      peer.on('stream', (currentStream) => {\r\n        userVideo.current.srcObject= currentStream;\r\n      });\r\n\r\n      socket.on('callAccepted', (signal) => {\r\n          setCallAccepted(true);\r\n          peer.signal(signal);\r\n          socket.emit(\"updateMyMedia\", {\r\n            type: \"both\",\r\n            currentMediaStatus: [myMicStatus, myVdoStatus],\r\n          });\r\n      });\r\n      connectionRef.current = peer;\r\n  };\r\n\r\n  const updateVideo = () => {\r\n    setMyVdoStatus((currentStatus) => {\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"video\",\r\n        currentMediaStatus: !currentStatus,\r\n      });\r\n      stream.getVideoTracks()[0].enabled = !currentStatus;\r\n      return !currentStatus;\r\n    });\r\n  };\r\n  const updateMic = () => {\r\n    setMyMicStatus((currentStatus) => {\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"mic\",\r\n        currentMediaStatus: !currentStatus,\r\n      });\r\n      stream.getAudioTracks()[0].enabled = !currentStatus;\r\n      return !currentStatus;\r\n    });\r\n  };\r\n\r\n  const shareScreen = () => {\r\n    if(myScreen){\r\n      navigator.mediaDevices.getDisplayMedia({cursor:true})\r\n      .then(screenStream=>{\r\n        myVideo.current.srcObject=screenStream; \r\n        ss=screenStream;\r\n        if(callAccepted)\r\n        connectionRef.current.replaceTrack(stream.getVideoTracks()[0],screenStream.getVideoTracks()[0],stream);\r\n        setMyScreen(false);    \r\n        screenStream.getTracks()[0].onended = () =>{\r\n        myVideo.current.srcObject=stream;\r\n        if(callAccepted)\r\n        connectionRef.current.replaceTrack(screenStream.getVideoTracks()[0],stream.getVideoTracks()[0],stream);\r\n        setMyScreen(true);\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      setMyScreen(true);\r\n      ss=myVideo.current.srcObject;\r\n      myVideo.current.srcObject=stream;\r\n      if(callAccepted)\r\n      connectionRef.current.replaceTrack(ss.getVideoTracks()[0],stream.getVideoTracks()[0],stream);\r\n    }\r\n  };\r\n\r\n  const sendMsg = (value) => {\r\n    socket.emit(\"messageUser\", { name, to: call.from, msg: value, sender: name });\r\n    let msg = {};\r\n    msg.msg = value;\r\n    msg.type = \"sent\";\r\n    msg.timestamp = Date.now();\r\n    msg.sender = name;\r\n    setChat([...chat, msg]);\r\n  };\r\n\r\n  const leaveCall = () => {\r\n      setCallEnded(true);\r\n      connectionRef.current.destroy();\r\n      window.location.reload();\r\n  };\r\n\r\n  return(\r\n      <SocketContext.Provider value={{\r\n        call,\r\n        callAccepted,\r\n        myVideo,\r\n        userVideo,\r\n        stream,\r\n        name,\r\n        setName,\r\n        callEnded,\r\n        me,\r\n        callUser,\r\n        leaveCall,\r\n        answerCall,\r\n        myVdoStatus,\r\n        setMyVdoStatus,\r\n        userVdoStatus,\r\n        setUserVdoStatus,\r\n        updateVideo,\r\n        myMicStatus,\r\n        userMicStatus,\r\n        updateMic,\r\n        shareScreen,\r\n        myScreen,\r\n        sendMsg,\r\n        msgRcv,\r\n        chat,\r\n        setChat,\r\n        setMsgRcv,\r\n      }}>\r\n        {children}\r\n      </SocketContext.Provider>\r\n  );\r\n\r\n};\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\r\nimport { Grid, Typography, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SocketContext } from '../SocketContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\r\nimport StopScreenShareIcon from '@material-ui/icons/StopScreenShare';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n\r\n  video: {\r\n    width: '600px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '300px',\r\n    },\r\n  },\r\n  gridContainer: {\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n\r\n  paper: {\r\n    padding: '10px',\r\n    border: '2px solid black',\r\n    margin: '20px',\r\n    background: 'black',\r\n    color: 'white',\r\n  },\r\n\r\n  ButtonGroup: {\r\n    background: 'violet',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n}));\r\n\r\n\r\nconst VideoPlayer = () => {\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call, myVdoStatus,\r\n      updateVideo,\r\n      myMicStatus,\r\n      updateMic,\r\n      shareScreen,\r\n      myScreen } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n    const toggleFullScreen = () => {\r\n      if(!callAccepted)\r\n       return;\r\n      var v = document.getElementById(\"usVideo\");\r\n      if (v.requestFullscreen) {\r\n        v.requestFullscreen();\r\n      } else if (v.msRequestFullscreen) {\r\n        v.msRequestFullscreen();\r\n      } else if (v.mozRequestFullScreen) {\r\n        v.mozRequestFullScreen();\r\n      } else if (v.webkitRequestFullscreen) {\r\n        v.webkitRequestFullscreen();\r\n      }\r\n    };\r\n    return (\r\n      <div className={classes.root}>\r\n          <Grid container className={classes.gridContainer}>\r\n          { stream &&(\r\n                          <Paper className={classes.paper}>\r\n                              <Grid item xs={5} md={3}>\r\n                                  <Typography variant=\"h4\" gutterBottom background_color=\"red\">{name || 'My Name'}</Typography>\r\n                                  <video playsInline muted ref={myVideo} autoPlay className={classes.video} \r\n                                    style={{\r\n                                      opacity: `${myVdoStatus ? \"1\" : \"0\"}`,\r\n                                    }}\r\n                                  />\r\n                              </Grid>\r\n                          </Paper>\r\n          )}\r\n          {callAccepted && !callEnded && (\r\n                      <Paper className={classes.paper}>\r\n                      <Grid item xs={12} md={6}>\r\n                      {console.log(call.name)}\r\n                          <Typography variant=\"h4\" background_color=\"red\" gutterBottom>{call.name || 'Caller Name'}</Typography>\r\n                          <video playsInline id=\"usVideo\" ref={userVideo} autoPlay className={classes.video} />\r\n                      </Grid>\r\n                      </Paper>\r\n          )}\r\n          </Grid>\r\n            <ButtonGroup class=\"btn-toolbar\" variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\" className={classes.buttons}>\r\n              <Button startIcon={myMicStatus ?<MicIcon />:<MicOffIcon />} onClick={() => updateMic()}>{myMicStatus ?<span>Mute</span>:<span>Unmute</span>}</Button>\r\n              <Button startIcon={myVdoStatus ?<VideocamIcon />:<VideocamOffIcon />} onClick={() => updateVideo()}>{myVdoStatus ?<span>Turn off Video</span>:<span>Turn on Video</span>}</Button>\r\n              <Button startIcon={myScreen ?<ScreenShareIcon />:<StopScreenShareIcon />} onClick={() => shareScreen()}>{myScreen ?<span>Share Screen</span>:<span>Stop Sharing Screen</span>}</Button>\r\n              <Button startIcon={<FullscreenIcon />} onClick={() => toggleFullScreen()}>Fullscreen</Button>\r\n            </ButtonGroup>\r\n          </div>\r\n    );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React, { useContext , useState } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone } from '@material-ui/icons';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n      width: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    container: {\r\n      width: '600px',\r\n      margin: '35px 0',\r\n      padding: 0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '80%',\r\n      },\r\n    },\r\n    margin: {\r\n      marginTop: 20,\r\n    },\r\n    padding: {\r\n      padding: 20,\r\n    },\r\n    paper: {\r\n      padding: '10px 20px',\r\n      border: '2px solid black',\r\n    },\r\n   }));\r\n\r\nconst Options = ( {children} ) => {\r\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n    const [idToCall, setIdToCall] = useState('');\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Grid container className={classes.gridContainer}>\r\n                    <Grid item xs={12} md={6} className={classes.padding}>\r\n                        <Typography gutterBottom variant=\"h6\">Meet Info</Typography>\r\n                        <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n                        <CopyToClipboard text={me} className={classes.margin}>\r\n                            <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                            Copy Meeting ID\r\n                            </Button>\r\n                        </CopyToClipboard>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} className={classes.padding}>\r\n                        <Typography gutterBottom variant=\"h6\">Join a Meet</Typography>\r\n                        <TextField label=\"Meet ID\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n                        {callAccepted && !callEnded ? (\r\n                            <Button variant=\"contained\"\r\n                             color=\"secondary\" \r\n                             startIcon={<CallEndIcon \r\n                             fontSize=\"large\" />} \r\n                             fullWidth \r\n                             onClick={leaveCall} \r\n                             className={classes.margin}>\r\n                              End Call\r\n                            </Button>\r\n                          ) : (\r\n                            <Button variant=\"contained\" \r\n                            color=\"primary\" \r\n                            startIcon={<Phone fontSize=\"large\" />} \r\n                            fullWidth \r\n                            onClick={() => callUser(idToCall)} \r\n                            className={classes.margin}>\r\n                              Enter Call\r\n                            </Button>\r\n                          )}\r\n                    </Grid>\r\n                </Grid>    \r\n                </form>\r\n                {children}\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Options;\r\n","export default __webpack_public_path__ + \"static/media/ringtone.62957dca.mp3\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { SocketContext } from '../SocketContext';\r\nimport ringtone from './ringtone.mp3'\r\n\r\nconst Notifications = () => {\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n    const [audio] = useState( typeof Audio !== \"undefined\" && new Audio(ringtone));\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    useEffect(() => {\r\n        isPlaying ? audio.play() : audio.pause();\r\n      },\r\n      [isPlaying, audio]\r\n    );\r\n    const handleCancel = () => {\r\n        window.location.reload();\r\n      };\r\n      useEffect(() => {\r\n        if (call.isReceivingCall && !callAccepted) {\r\n          setIsPlaying(true);\r\n        } else setIsPlaying(false);\r\n      }, [call.isReceivingCall, callAccepted]);\r\n\r\n    return (\r\n        <>\r\n            {call.isReceivingCall && !callAccepted && (\r\n                <>\r\n                <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                <h1>{call.name} is calling: </h1>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                    Answer\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleCancel}>\r\n                    Reject\r\n                </Button>\r\n                </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport styles from './styles.css';\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Options from './components/Options';\r\nimport Notifications from './components/Notifications';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n      marginLeft: '15px',\r\n    },\r\n    wrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar position=\"static\" color=\"inherit\" className={classes.appBar}>\r\n                <Typography className={styles.bigheading} variant=\"h2\" align=\"center\">\r\n                👥\r\n                Engage Meetings\r\n                </Typography>\r\n            </AppBar>\r\n            <VideoPlayer />\r\n            <Options>\r\n                <Notifications />\r\n            </Options>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>, \r\n        document.getElementById('root'),\r\n);"],"sourceRoot":""}