{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Options.jsx","assets/ringtone.mp3","components/Notifications.jsx","assets/chatlogo.png","components/Chat.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","ss","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myCamStatus","setmyCamStatus","userCamStatus","setuserCamStatus","myMicStatus","setMyMicStatus","userMicStatus","setUserMicStatus","myScreen","setMyScreen","otherUser","setOtherUser","chat","setChat","uname","setUname","calling","setCalling","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","type","currentMediaStatus","value","msg","sender","timestamp","Date","now","Provider","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","myMediaStatus","updateVideo","currentStatus","getVideoTracks","enabled","updateMic","getAudioTracks","shareScreen","getDisplayMedia","cursor","screenStream","replaceTrack","getTracks","onended","sendMsg","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","margin","spacing","width","breakpoints","down","gridContainer","justifyContent","paper","padding","border","background","color","ButtonGroup","VideoPlayer","useContext","classes","className","Grid","container","Paper","item","xs","md","Typography","variant","gutterBottom","background_color","playsInline","muted","ref","autoPlay","style","opacity","console","log","class","buttons","Button","startIcon","onClick","v","document","getElementById","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","toggleFullScreen","shares","marginTop","Options","idToCall","setIdToCall","isCopied","setIsCopied","link","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","onCopy","setTimeout","Assignment","fontSize","Phone","EmailShareButton","url","body","String","EmailIcon","size","round","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","summary","LinkedinIcon","TelegramShareButton","title","TelegramIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","Notifications","Audio","ringtone","isPlaying","setIsPlaying","play","pause","Modal","height","infoBar","borderRadius","form","sendButton","input","msg_sent","alignSelf","mess","overflow","maxHeight","Chat","show","setShow","handleClose","curMsg","setCurMsg","downloadLink","setDownloadLink","showLink","setShowLink","newchat","scrollIntoView","behavior","onSend","length","makeTextFile","JSON","stringify","Blob","URL","revokeObjectURL","createObjectURL","download","href","closeOnOuterClick","onClose","containerStyle","map","msg_rcv","src","chatlogo","alt","placeholder","onKeyPress","event","key","preventDefault","onEnter","image","marginLeft","wrapper","App","AppBar","position","appBar","styles","bigheading","align","ReactDOM","render"],"mappings":"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","file":"static/js/main.6b311ab9.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\n/* Server side connection */\r\nconst socket = io('http://localhost:5000');\r\n//const socket = io('https://engage-meets.herokuapp.com/');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\r\n    const [stream, setStream] = useState();\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [myCamStatus, setmyCamStatus] = useState(true);\r\n    const [userCamStatus, setuserCamStatus] = useState();\r\n    const [myMicStatus, setMyMicStatus] = useState(true);\r\n    const [userMicStatus, setUserMicStatus] = useState();\r\n    const [myScreen, setMyScreen] = useState(true);\r\n    const [otherUser, setOtherUser] = useState(\"\");\r\n  \tconst [chat, setChat ] = useState([]);\r\n    const [uname, setUname] = useState(\"\");\r\n    const [calling, setCalling] = useState(false);\r\n    var ss;\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then((currentStream) => {\r\n        setStream(currentStream);\r\n\r\n        myVideo.current.srcObject = currentStream;\r\n      });\r\n\r\n      socket.on('me', (id) => setMe(id));\r\n      socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n          setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n      });\r\n\r\n      socket.on(\"updateUserMedia\", ({ type, currentMediaStatus }) => {\r\n        if (currentMediaStatus !== null || currentMediaStatus !== []) {\r\n          switch (type) {\r\n            case \"video\":\r\n              setuserCamStatus(currentMediaStatus);\r\n              break;\r\n            case \"mic\":\r\n              setUserMicStatus(currentMediaStatus);\r\n              break;\r\n            default:\r\n              setUserMicStatus(currentMediaStatus[0]);\r\n              setuserCamStatus(currentMediaStatus[1]);\r\n              break;\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"recieveMsg\", ({ name, msg: value, sender }) => {\r\n        let msg = {};\r\n        msg.msg = value;\r\n        msg.type = \"rcv\";\r\n        msg.sender = sender;\r\n        msg.timestamp = Date.now();\r\n        setChat(chat => [...chat, msg]);\r\n      });\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  /* Function to answer and join call */\r\n  const answerCall = () => {\r\n          setCallAccepted(true);\r\n          const peer = new Peer({ initiator: false, trickle: false, stream });\r\n          setOtherUser(call.from);\r\n          peer.on('signal', (data) => {\r\n          socket.emit('answerCall', { signal : data, to: call.from , uname: name, type: \"both\", myMediaStatus: [myMicStatus, myCamStatus]});\r\n        });\r\n\r\n          peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject= currentStream;\r\n          });\r\n\r\n          peer.signal(call.signal);\r\n          connectionRef.current = peer;\r\n\r\n  };\r\n\r\n\r\n  /* Function to call user */\r\n  const callUser = (id) => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n      setCalling(true);\r\n      peer.on('signal', (data) => {\r\n        socket.emit('callUser', { userToCall: id, signalData : data, from: me, name });\r\n      });\r\n      setOtherUser(id);\r\n      peer.on('stream', (currentStream) => {\r\n        userVideo.current.srcObject= currentStream;\r\n      });\r\n\r\n      socket.on('callAccepted', ({signal, uname}) => {\r\n          setCalling(false);\r\n          setCallAccepted(true);\r\n          setUname(uname);\r\n          peer.signal(signal);\r\n          socket.emit(\"updateMyMedia\", {\r\n            type: \"both\",\r\n            currentMediaStatus: [myMicStatus, myCamStatus],\r\n          });\r\n      });\r\n      connectionRef.current = peer;\r\n  };\r\n\r\n  /* Function managing change in camera status */\r\n  const updateVideo = () => {\r\n    setmyCamStatus((currentStatus) => {\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"video\",\r\n        currentMediaStatus: !currentStatus,\r\n      });\r\n      stream.getVideoTracks()[0].enabled = !currentStatus;\r\n      return !currentStatus;\r\n    });\r\n  };\r\n\r\n  /* Function managing change in microphone status */\r\n  const updateMic = () => {\r\n    setMyMicStatus((currentStatus) => {\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"mic\",\r\n        currentMediaStatus: !currentStatus,\r\n      });\r\n      stream.getAudioTracks()[0].enabled = !currentStatus;\r\n      return !currentStatus;\r\n    });\r\n  };\r\n\r\n\r\n  /* Function managing screen sharing */\r\n  const shareScreen = () => {\r\n    if(myScreen){\r\n      navigator.mediaDevices.getDisplayMedia({cursor:true})\r\n      .then(screenStream=>{\r\n        myVideo.current.srcObject=screenStream; \r\n        ss=screenStream;\r\n        if(callAccepted)\r\n        connectionRef.current.replaceTrack(stream.getVideoTracks()[0],screenStream.getVideoTracks()[0],stream);\r\n        setMyScreen(false);    \r\n        screenStream.getTracks()[0].onended = () =>{\r\n        myVideo.current.srcObject=stream;\r\n        if(callAccepted)\r\n        connectionRef.current.replaceTrack(screenStream.getVideoTracks()[0],stream.getVideoTracks()[0],stream);\r\n        setMyScreen(true);\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      setMyScreen(true);\r\n      ss=myVideo.current.srcObject;\r\n      myVideo.current.srcObject=stream;\r\n      if(callAccepted)\r\n      connectionRef.current.replaceTrack(ss.getVideoTracks()[0],stream.getVideoTracks()[0],stream);\r\n    }\r\n  };\r\n\r\n  /* Function managing chat */\r\n  const sendMsg = (value) => {\r\n    socket.emit(\"messageUser\", { name, to: otherUser, msg: value, sender: name });\r\n    let msg = {};\r\n    msg.msg = value;\r\n    msg.type = \"sent\";\r\n    msg.timestamp = Date.now();\r\n    msg.sender = name;\r\n    setChat([...chat, msg]);\r\n  };\r\n\r\n  /* Function managing call termination */\r\n  const leaveCall = () => {\r\n      setCallEnded(true);\r\n      connectionRef.current.destroy();\r\n      window.location.reload();\r\n  };\r\n\r\n  return(\r\n      <SocketContext.Provider value={{\r\n        call,\r\n        callAccepted,\r\n        myVideo,\r\n        userVideo,\r\n        stream,\r\n        name,\r\n        setName,\r\n        callEnded,\r\n        me,\r\n        callUser,\r\n        leaveCall,\r\n        answerCall,\r\n        myCamStatus,\r\n        setmyCamStatus,\r\n        userCamStatus,\r\n        setuserCamStatus,\r\n        updateVideo,\r\n        myMicStatus,\r\n        userMicStatus,\r\n        updateMic,\r\n        shareScreen,\r\n        myScreen,\r\n        uname,\r\n        calling,\r\n        sendMsg,\r\n        chat,\r\n        setChat,\r\n        setOtherUser,\r\n      }}>\r\n        {children}\r\n      </SocketContext.Provider>\r\n  );\r\n\r\n};\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\r\nimport { Grid, Typography, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SocketContext } from '../SocketContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\r\nimport StopScreenShareIcon from '@material-ui/icons/StopScreenShare';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n  },\r\n\r\n  video: {\r\n    width: '600px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '300px',\r\n    },\r\n  },\r\n  gridContainer: {\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n\r\n  paper: {\r\n    padding: '10px',\r\n    border: '2px solid black',\r\n    margin: '20px',\r\n    background: 'black',\r\n    color: 'white',\r\n  },\r\n\r\n  ButtonGroup: {\r\n    background: 'violet',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n}));\r\n\r\n/* Video call and related options rendering */\r\nconst VideoPlayer = () => {\r\n    const { name, \r\n      callAccepted, \r\n      myVideo, \r\n      userVideo, \r\n      callEnded, \r\n      stream, \r\n      call, \r\n      myCamStatus, \r\n      updateVideo, \r\n      myMicStatus, \r\n      updateMic, \r\n      shareScreen, \r\n      myScreen, \r\n      uname, } = useContext(SocketContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    /* Fullscreen function */\r\n    const toggleFullScreen = () => {\r\n      if(!callAccepted)\r\n       return;\r\n      var v = document.getElementById(\"usVideo\");\r\n      if (v.requestFullscreen) {\r\n        v.requestFullscreen();\r\n      } else if (v.msRequestFullscreen) {\r\n        v.msRequestFullscreen();\r\n      } else if (v.mozRequestFullScreen) {\r\n        v.mozRequestFullScreen();\r\n      } else if (v.webkitRequestFullscreen) {\r\n        v.webkitRequestFullscreen();\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n          <Grid container className={classes.gridContainer}> \r\n\r\n          {/* Current user's video */}\r\n          { stream &&(\r\n                          <Paper className={classes.paper}>\r\n                              <Grid item xs={5} md={3}>\r\n                                  <Typography variant=\"h4\" gutterBottom background_color=\"red\">{name || 'My Name'}</Typography>\r\n                                  <video playsInline muted ref={myVideo} autoPlay className={classes.video} \r\n                                    style={{\r\n                                      opacity: `${myCamStatus ? \"1\" : \"0\"}`,\r\n                                    }}\r\n                                  />\r\n                              </Grid>\r\n                          </Paper>\r\n          )}\r\n          \r\n          {/* Other user's video */}\r\n          {callAccepted && !callEnded && (\r\n                      <Paper className={classes.paper}>\r\n                      <Grid item xs={12} md={6}>\r\n                      {console.log(call.name)}\r\n                          <Typography variant=\"h4\" background_color=\"red\" gutterBottom>{call.name || uname || 'Caller Name'}</Typography>\r\n                          <video playsInline id=\"usVideo\" ref={userVideo} autoPlay className={classes.video} />\r\n                      </Grid>\r\n                      </Paper>\r\n          )}\r\n          \r\n          {/* Options List */}\r\n          </Grid>\r\n            <ButtonGroup class=\"btn-toolbar\" variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\" className={classes.buttons}>\r\n              <Button startIcon={myMicStatus ?<MicIcon />:<MicOffIcon />} onClick={() => updateMic()}>{myMicStatus ?<span>Mute</span>:<span>Unmute</span>}</Button>\r\n              <Button startIcon={myCamStatus ?<VideocamIcon />:<VideocamOffIcon />} onClick={() => updateVideo()}>{myCamStatus ?<span>Turn off Video</span>:<span>Turn on Video</span>}</Button>\r\n              <Button startIcon={myScreen ?<ScreenShareIcon />:<StopScreenShareIcon />} onClick={() => shareScreen()}>{myScreen ?<span>Share Screen</span>:<span>Stop Sharing Screen</span>}</Button>\r\n              <Button startIcon={<FullscreenIcon />} onClick={() => toggleFullScreen()}>Fullscreen</Button>\r\n            </ButtonGroup>\r\n          </div>\r\n    );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React, { useContext , useState } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone } from '@material-ui/icons';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SocketContext } from '../SocketContext';\r\nimport {\r\n  EmailShareButton,\r\n  FacebookShareButton,\r\n  LinkedinShareButton,\r\n  TelegramShareButton,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  EmailIcon,\r\n  FacebookIcon,\r\n  LinkedinIcon,\r\n  TelegramIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n} from \"react-share\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    shares: {\r\n      padding: '20px 20px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    gridContainer: {\r\n      width: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    container: {\r\n      width: '600px',\r\n      margin: '35px 0',\r\n      padding: 0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '80%',\r\n      },\r\n    },\r\n    margin: {\r\n      marginTop: 20,\r\n    },\r\n    padding: {\r\n      padding: 20,\r\n    },\r\n    paper: {\r\n      padding: '10px 20px',\r\n      border: '2px solid black',\r\n    },\r\n}));\r\n\r\nconst Options = ( {children} ) => {\r\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser, calling } = useContext(SocketContext);\r\n    const [idToCall, setIdToCall] = useState('');\r\n    const classes = useStyles();\r\n    const [isCopied, setIsCopied] = useState(false);\r\n    const link=\"https://engage-meets.netlify.app/\";\r\n\r\n    /* Code copy status */\r\n    const onCopyText = () => {\r\n      setIsCopied(true);\r\n      setTimeout(() => {\r\n        setIsCopied(false);\r\n      }, 1000);\r\n    };\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Grid container className={classes.gridContainer}>\r\n                    <Grid item xs={12} md={6} className={classes.padding}>\r\n                        <Typography gutterBottom variant=\"h6\">Meet Info</Typography>\r\n\r\n                        {/* User's name entered */}\r\n                        <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n\r\n                        {/* Meet id generated */}\r\n                        <CopyToClipboard text={me} onCopy={onCopyText} className={classes.margin}>\r\n                          <div>\r\n                            <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                            Copy Meeting ID\r\n                            </Button>\r\n                            {isCopied?<span> Copied </span>:<span></span>}\r\n                          </div>  \r\n                        </CopyToClipboard>\r\n                    </Grid>\r\n\r\n                    {/* Call and endcall controls */}\r\n                    <Grid item xs={12} md={6} className={classes.padding}>\r\n                        <Typography gutterBottom variant=\"h6\">Join a Meet</Typography>\r\n                        <TextField label=\"Meet ID\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n                        {callAccepted && !callEnded ? (\r\n                            <Button variant=\"contained\"\r\n                             color=\"secondary\" \r\n                             startIcon={<CallEndIcon \r\n                             fontSize=\"large\" />} \r\n                             fullWidth \r\n                             onClick={leaveCall} \r\n                             className={classes.margin}>\r\n                              End Call\r\n                            </Button>\r\n                          ) : (\r\n                            <div>\r\n                            <Button variant=\"contained\" \r\n                            color=\"primary\" \r\n                            startIcon={<Phone fontSize=\"large\" />} \r\n                            fullWidth \r\n                            onClick={() => callUser(idToCall)} \r\n                            className={classes.margin}>\r\n                              Enter Call\r\n                            </Button>\r\n                            {calling?<span> Calling </span>:<span></span>}\r\n                            </div>\r\n                          )}\r\n                    </Grid>\r\n                </Grid>    \r\n                </form>\r\n                {children}\r\n\r\n                {/* Sharing ID on social media */}\r\n                <div className={classes.shares}>\r\n                  <EmailShareButton\r\n                      url={link}\r\n                      body={\"Join my Call with code: \" + String(me) +\"\\nLink: \"}\r\n                    >\r\n                      <EmailIcon size={32} round={true} />\r\n                  </EmailShareButton>\r\n                  \r\n                  <FacebookShareButton\r\n                      url={link}\r\n                      quote={\"Join my Call with code: \" + String(me) +\"\\nLink: \"}\r\n                    >\r\n                      <FacebookIcon size={32} round={true} />\r\n                  </FacebookShareButton>\r\n                  \r\n                  <LinkedinShareButton\r\n                      url={link}\r\n                      summary={\"Join my Call with code: \" + String(me) +\"\\nLink: \"}\r\n                    >\r\n                      <LinkedinIcon size={32} round={true} />\r\n                  </LinkedinShareButton>\r\n                 \r\n                  <TelegramShareButton\r\n                      url={link}\r\n                      title={\"Join my Call with code: \" + String(me) +\"\\nLink: \"}\r\n                    >\r\n                      <TelegramIcon size={32} round={true} />\r\n                  </TelegramShareButton>\r\n\r\n                  <TwitterShareButton\r\n                      url={link}\r\n                      title={\"Join my Call with code: \" + String(me) +\"\\nLink: \"}\r\n                    >\r\n                      <TwitterIcon size={32} round={true} />\r\n                  </TwitterShareButton>\r\n\r\n                  <WhatsappShareButton\r\n                    url={link}\r\n                    title={\"Join my Call with code: \" + String(me) +\"\\nLink: \"}\r\n                  >\r\n                    <WhatsappIcon size={32} round={true} />\r\n                  </WhatsappShareButton>\r\n                </div>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Options;\r\n","export default __webpack_public_path__ + \"static/media/ringtone.62957dca.mp3\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { SocketContext } from '../SocketContext';\r\nimport ringtone from '../assets/ringtone.mp3'\r\n/* Call notification */\r\n\r\nconst Notifications = () => {\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n\r\n    /* Call ringtone */\r\n    const [audio] = useState( typeof Audio !== \"undefined\" && new Audio(ringtone));\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    useEffect(() => {\r\n        isPlaying ? audio.play() : audio.pause();\r\n      },\r\n      [isPlaying, audio]\r\n    );\r\n    const handleCancel = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (call.isReceivingCall && !callAccepted) {\r\n          setIsPlaying(true);\r\n        } else setIsPlaying(false);\r\n    }, [call.isReceivingCall, callAccepted]);\r\n\r\n    return (\r\n        <>\r\n            {call.isReceivingCall && !callAccepted && (\r\n                <>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                    <h1>{call.name} is calling: </h1>\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                          Answer\r\n                      </Button>\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={handleCancel}>\r\n                          Reject\r\n                      </Button>\r\n                  </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","export default __webpack_public_path__ + \"static/media/chatlogo.69eca262.png\";","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from 'simple-react-modal';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { SocketContext } from '../SocketContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport chatlogo from '../assets/chatlogo.png';\r\nimport './Chat.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  Modal: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n\r\n  infoBar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'white',\r\n    background: '#9042F5',\r\n    borderRadius: '8px',\r\n    height: '60px',\r\n    width: '100%',\r\n  },\r\n  \r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    background: '#FFFFFF',\r\n    borderRadius: '8px',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n\r\n  form: {\r\n    display: 'flex',\r\n    border: '2px solid #D3D3D3',\r\n  },\r\n\r\n  sendButton: {\r\n    color: '#fff',\r\n    background: '#2979FF',\r\n    padding: '20px',\r\n    display: 'inline-block',\r\n    border: 'none',\r\n    width: '20%',\r\n  },\r\n\r\n  input: {\r\n    border: 'none',\r\n    borderRadius: '0',\r\n    padding: '5%',\r\n    width: '70%',\r\n    fontSize: '1.2em',\r\n  },\r\n\r\n  msg_sent: {\r\n    alignSelf: 'flex-end',\r\n  },\r\n\r\n  mess: {\r\n    padding: '5% 0',\r\n    overflow: 'auto',\r\n    height: '100%',\r\n    maxHeight: '250px',\r\n  },\r\n\r\n}));\r\n\r\n\r\nconst Chat = () => {\r\n      const [show, setShow] = useState(false);\r\n      const handleClose = () => setShow(false);\r\n      const handleShow = () => setShow(true);\r\n      const classes = useStyles();\r\n      const { sendMsg, chat, } = useContext(SocketContext);\r\n      const [curMsg, setCurMsg] = useState(\"\");\r\n      const [downloadLink, setDownloadLink] = useState('');\r\n      const [showLink, setShowLink] = useState(false);\r\n      const newchat = useRef();\r\n\r\n      /*Displaying latest chat */\r\n      useEffect(() => {\r\n        if (newchat?.current) newchat.current.scrollIntoView({ behavior: \"smooth\" });\r\n      }, [chat]);\r\n\r\n      /*Handling enter*/\r\n      const onEnter = (event) => {\r\n        event.preventDefault();\r\n        onSend();\r\n      };\r\n\r\n      /*Sending message */\r\n      const onSend = () => {\r\n        if (curMsg && curMsg.length) sendMsg(curMsg);\r\n        setCurMsg(\"\");\r\n      };\r\n\r\n      /*Creating downloadable chat log file */\r\n\r\n      const makeTextFile = () => {\r\n        const log=JSON.stringify(chat, null, 2);\r\n        const data = new Blob([log], { type: 'text/plain' });\r\n        if (downloadLink !== '') window.URL.revokeObjectURL(downloadLink);\r\n        setDownloadLink(window.URL.createObjectURL(data));\r\n      };\r\n\r\n      const getLink = () => {\r\n        makeTextFile();\r\n        setShowLink(true);\r\n        setTimeout(() => {\r\n          setShowLink(false);\r\n        }, 10000);\r\n      };\r\n\r\n      useEffect(() => {\r\n        makeTextFile();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, []);\r\n\r\n  return (\r\n    <>\r\n    {/*Chat box expands on click */}\r\n      <ButtonGroup class=\"btn-toolbar\" variant=\"contained\">\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"lg\" startIcon={<ChatIcon />} onClick={handleShow}>Chat</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"lg\" startIcon={<GetAppIcon />} onClick={getLink}>Chat Log</Button>\r\n      </ButtonGroup>\r\n\r\n            {/*Link to download chat log */}\r\n            {showLink?<a style={{color: \"yellow\", fontSize: \"large\"}} download=\"chatlog.txt\" href={downloadLink}>Download Chat log</a>:null}\r\n\r\n      <Modal\r\n      closeOnOuterClick={true}\r\n      show={show}\r\n      onClose={handleClose}\r\n      containerStyle={{height: 'auto', display: 'flex', borderRadius: '8px',}}>\r\n\r\n      <div className={classes.container}>\r\n\r\n        <div className={classes.infoBar}>\r\n          <h2>CHAT</h2>\r\n        </div>\r\n\r\n      {/*Chat container */}\r\n          <ScrollToBottom>\r\n          {chat.length>0 ? (\r\n                    <div className={classes.mess}>\r\n                      {chat.map((msg) => (\r\n                        <div\r\n                          className={msg.type === \"sent\" ? classes.msg_sent : classes.msg_rcv}\r\n                        >\r\n                        {/*Sent and recieved messages */}\r\n                          {msg.type === \"sent\" ? (\r\n                            <div className=\"messageContainer justifyEnd\">\r\n                              <p className=\"sentText pr-10\">{msg.sender}</p>\r\n                              <div className=\"messageBox backgroundBlue\">\r\n                                <p className=\"messageText colorWhite\">{msg.msg}</p>\r\n                              </div>\r\n                            </div>\r\n                          ):(\r\n                            <div className=\"messageContainer justifyStart\">\r\n                              <div className=\"messageBox backgroundLight\">\r\n                                <p className=\"messageText colorDark\">{msg.msg}</p>\r\n                              </div>\r\n                              <p className=\"sentText pl-10 \">{msg.sender}</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n\r\n                      <div ref={newchat} style={{border:'none'}}></div>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                    {/*If chat is empty */}\r\n                      <img src={chatlogo} alt=\"\" width=\"150\" height=\"150\"/>\r\n                      no messages\r\n                    </div>\r\n                  )}\r\n          </ScrollToBottom>  \r\n\r\n        {/*Chat Input */}      \r\n        <form className={classes.form}>\r\n          <input\r\n            className={classes.input}\r\n            type=\"text\"\r\n            placeholder=\"Type a message...\"\r\n            value={curMsg}\r\n            onChange={(e) => setCurMsg(e.target.value)}\r\n            onKeyPress={(event) => event.key === 'Enter' ? onEnter(event) : null}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.sendButton} onClick={onSend}>SEND</Button>\r\n        </form>\r\n\r\n            {/*Closing chat box */}\r\n            <Button variant=\"contained\" color=\"primary\" startIcon={<CancelIcon />} onClick={handleClose}>Close</Button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport styles from './styles.css';\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Options from './components/Options';\r\nimport Notifications from './components/Notifications';\r\nimport Chat from './components/Chat';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n      marginLeft: '15px',\r\n    },\r\n    wrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar position=\"static\" color=\"primary\" className={classes.appBar}>\r\n                <Typography className={styles.bigheading} variant=\"h2\" align=\"center\">\r\n                👥\r\n                Engage Meetings\r\n                </Typography>\r\n            </AppBar>\r\n            <VideoPlayer />\r\n            <Chat />\r\n            <Options>\r\n                <Notifications />\r\n            </Options>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>, \r\n        document.getElementById('root'),\r\n);"],"sourceRoot":""}